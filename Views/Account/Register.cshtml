@model GalleryApp.ViewModels.RegisterViewModel
@{
    ViewData["Title"] = "Register";
}

<div class="register-container">
    <div class="register-card">
        <div class="register-header">
            <h2 class="register-title">Create Account</h2>
            <p class="register-subtitle">Join us today and get started</p>
        </div>

        <form asp-action="Register" method="post" class="register-form">
            @Html.AntiForgeryToken()
            <div class="alert alert-danger validation-summary" asp-validation-summary="ModelOnly"></div>

            <div class="form-group">
                <label asp-for="Username" class="form-label">
                    <i class="fas fa-user"></i>
                    Username
                </label>
                <input type="text" asp-for="Username" class="form-input" placeholder="Choose a username" />
                <span class="error-message" asp-validation-for="Username"></span>
            </div>

            <div class="form-group">
                <label asp-for="Email" class="form-label">
                    <i class="fas fa-envelope"></i>
                    Email Address
                </label>
                <input type="email" asp-for="Email" class="form-input" placeholder="Enter your email address" />
                <span class="error-message" asp-validation-for="Email"></span>
            </div>

            <div class="form-group">
                <label asp-for="Password" class="form-label">
                    <i class="fas fa-lock"></i>
                    Password
                </label>
                <div class="password-input-container">
                    <input type="password" asp-for="Password" class="form-input password-input" placeholder="Create a strong password" />
                    <button type="button" class="password-toggle" onclick="togglePassword('Password')">
                        <i class="fas fa-eye" id="Password-toggle-icon"></i>
                    </button>
                </div>
                <div class="password-strength">
                    <div class="strength-bar" id="password-strength-bar"></div>
                    <span class="strength-text" id="password-strength-text"></span>
                </div>
                <span class="error-message" asp-validation-for="Password"></span>
            </div>

            <div class="form-group">
                <label asp-for="ConfirmPassword" class="form-label">
                    <i class="fas fa-check-circle"></i>
                    Confirm Password
                </label>
                <div class="password-input-container">
                    <input type="password" asp-for="ConfirmPassword" class="form-input password-input" placeholder="Confirm your password" />
                    <button type="button" class="password-toggle" onclick="togglePassword('ConfirmPassword')">
                        <i class="fas fa-eye" id="ConfirmPassword-toggle-icon"></i>
                    </button>
                </div>
                <span class="error-message" asp-validation-for="ConfirmPassword"></span>
            </div>

            <div class="form-actions">
                <button type="submit" class="btn-register">
                    <i class="fas fa-user-plus"></i>
                    Create Account
                </button>
                
                <div class="login-link">
                    Already have an account? 
                    <a asp-action="Login" class="btn-login-link">Sign In</a>
                </div>
            </div>

            <div class="register-footer">
                <p class="terms-text">
                    By creating an account, you agree to our 
                    <a href="#" class="terms-link">Terms of Service</a> and 
                    <a href="#" class="terms-link">Privacy Policy</a>
                </p>
            </div>
        </form>
    </div>
</div>

<style>
    .register-container {
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        padding: 20px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .register-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        padding: 40px;
        width: 100%;
        max-width: 500px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        margin: 20px 0;
    }

    .register-header {
        text-align: center;
        margin-bottom: 30px;
    }

    .register-title {
        color: #2d3748;
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 8px;
        background: linear-gradient(135deg, #667eea, #764ba2);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .register-subtitle {
        color: #718096;
        font-size: 1rem;
        margin: 0;
    }

    .register-form {
        width: 100%;
    }

    .form-group {
        margin-bottom: 24px;
        position: relative;
    }

    .form-label {
        display: flex;
        align-items: center;
        gap: 8px;
        color: #4a5568;
        font-weight: 600;
        margin-bottom: 8px;
        font-size: 0.95rem;
    }

    .form-label i {
        color: #667eea;
        width: 16px;
    }

    .form-input {
        width: 100%;
        padding: 16px 20px;
        border: 2px solid #e2e8f0;
        border-radius: 12px;
        font-size: 1rem;
        transition: all 0.3s ease;
        background: #f8fafc;
        box-sizing: border-box;
    }

    .form-input:focus {
        outline: none;
        border-color: #667eea;
        background: #fff;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        transform: translateY(-1px);
    }

    .form-input::placeholder {
        color: #a0aec0;
    }

    .password-input-container {
        position: relative;
        display: flex;
        align-items: center;
    }

    .password-input {
        padding-right: 50px;
    }

    .password-toggle {
        position: absolute;
        right: 16px;
        background: none;
        border: none;
        color: #718096;
        cursor: pointer;
        padding: 4px;
        border-radius: 4px;
        transition: color 0.3s ease;
    }

    .password-toggle:hover {
        color: #667eea;
    }

    .password-strength {
        margin-top: 8px;
    }

    .strength-bar {
        height: 4px;
        background: #e2e8f0;
        border-radius: 2px;
        overflow: hidden;
        margin-bottom: 4px;
    }

    .strength-bar::after {
        content: '';
        height: 100%;
        display: block;
        border-radius: 2px;
        transition: all 0.3s ease;
        width: 0%;
        background: #e53e3e;
    }

    .strength-bar.weak::after {
        width: 25%;
        background: #e53e3e;
    }

    .strength-bar.fair::after {
        width: 50%;
        background: #ed8936;
    }

    .strength-bar.good::after {
        width: 75%;
        background: #38a169;
    }

    .strength-bar.strong::after {
        width: 100%;
        background: #38a169;
    }

    .strength-text {
        font-size: 0.8rem;
        color: #718096;
    }

    .error-message {
        color: #e53e3e;
        font-size: 0.875rem;
        margin-top: 6px;
        display: block;
        font-weight: 500;
    }

    .validation-summary {
        background: #fed7d7;
        border: 1px solid #fc8181;
        color: #c53030;
        padding: 12px 16px;
        border-radius: 8px;
        margin-bottom: 20px;
        font-size: 0.9rem;
    }

    .validation-summary:empty {
        display: none;
    }

    .form-actions {
        margin-top: 32px;
    }

    .btn-register {
        width: 100%;
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        border: none;
        padding: 16px 24px;
        border-radius: 12px;
        font-size: 1rem;
        font-weight: 600;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        margin-bottom: 20px;
    }

    .btn-register:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
    }

    .btn-register:active {
        transform: translateY(0);
    }

    .login-link {
        text-align: center;
        color: #718096;
        font-size: 0.95rem;
    }

    .btn-login-link {
        color: #667eea;
        text-decoration: none;
        font-weight: 600;
        padding: 4px 8px;
        border-radius: 4px;
        transition: all 0.3s ease;
    }

    .btn-login-link:hover {
        background: rgba(102, 126, 234, 0.1);
        text-decoration: none;
        color: #5a67d8;
    }

    .register-footer {
        text-align: center;
        margin-top: 24px;
        padding-top: 24px;
        border-top: 1px solid #e2e8f0;
    }

    .terms-text {
        color: #718096;
        font-size: 0.85rem;
        margin: 0;
        line-height: 1.5;
    }

    .terms-link {
        color: #667eea;
        text-decoration: none;
        transition: color 0.3s ease;
    }

    .terms-link:hover {
        color: #5a67d8;
        text-decoration: underline;
    }

    /* Responsive design */
    @@media (max-width: 480px) {
        .register-container {
            padding: 16px;
        }

        .register-card {
            padding: 30px 24px;
        }

        .register-title {
            font-size: 1.75rem;
        }

        .form-input {
            padding: 14px 16px;
        }

        .password-input {
            padding-right: 46px;
        }

        .btn-register {
            padding: 14px 20px;
        }
    }

    /* Animation for form validation errors */
    .input-validation-error {
        border-color: #e53e3e !important;
        background-color: #fed7d7 !important;
        animation: shake 0.5s ease-in-out;
    }

    @@keyframes shake {
        0%, 100% { transform: translateX(0); }
        25% { transform: translateX(-5px); }
        75% { transform: translateX(5px); }
    }

    /* Loading state for submit button */
    .btn-register:disabled {
        opacity: 0.7;
        cursor: not-allowed;
        transform: none !important;
    }

    /* Form focus states */
    .form-group.focused .form-label {
        color: #667eea;
    }
</style>

<!-- Font Awesome for icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Password toggle functionality
        function togglePassword(fieldName) {
            const passwordField = document.getElementById(fieldName);
            const toggleIcon = document.getElementById(fieldName + '-toggle-icon');
            
            if (passwordField.type === 'password') {
                passwordField.type = 'text';
                toggleIcon.classList.remove('fa-eye');
                toggleIcon.classList.add('fa-eye-slash');
            } else {
                passwordField.type = 'password';
                toggleIcon.classList.remove('fa-eye-slash');
                toggleIcon.classList.add('fa-eye');
            }
        }

        // Password strength checker
        function checkPasswordStrength(password) {
            let strength = 0;
            let feedback = [];

            // Length check
            if (password.length >= 8) strength += 1;
            else feedback.push('at least 8 characters');

            // Uppercase check
            if (/[A-Z]/.test(password)) strength += 1;
            else feedback.push('uppercase letter');

            // Lowercase check
            if (/[a-z]/.test(password)) strength += 1;
            else feedback.push('lowercase letter');

            // Number check
            if (/\d/.test(password)) strength += 1;
            else feedback.push('number');

            // Special character check
            if (/[!@@#$%^&*(),.?":{}|<>]/.test(password)) strength += 1;
            else feedback.push('special character');

            return { strength, feedback };
        }

        document.addEventListener('DOMContentLoaded', function() {
            const inputs = document.querySelectorAll('.form-input');
            const passwordInput = document.getElementById('Password');
            const strengthBar = document.getElementById('password-strength-bar');
            const strengthText = document.getElementById('password-strength-text');
            
            // Focus effects
            inputs.forEach(input => {
                input.addEventListener('focus', function() {
                    this.closest('.form-group').classList.add('focused');
                });
                
                input.addEventListener('blur', function() {
                    this.closest('.form-group').classList.remove('focused');
                });
            });

            // Password strength indicator
            if (passwordInput && strengthBar && strengthText) {
                passwordInput.addEventListener('input', function() {
                    const password = this.value;
                    const { strength, feedback } = checkPasswordStrength(password);
                    
                    // Remove existing classes
                    strengthBar.className = 'strength-bar';
                    
                    if (password.length === 0) {
                        strengthText.textContent = '';
                        return;
                    }
                    
                    // Apply strength class
                    const strengthClasses = ['weak', 'weak', 'fair', 'good', 'strong'];
                    const strengthTexts = ['Very Weak', 'Weak', 'Fair', 'Good', 'Strong'];
                    
                    if (strength > 0) {
                        strengthBar.classList.add(strengthClasses[strength - 1]);
                        strengthText.textContent = strengthTexts[strength - 1];
                        
                        if (feedback.length > 0 && strength < 4) {
                            strengthText.textContent += ` (add: ${feedback.slice(0, 2).join(', ')})`;
                        }
                    }
                });
            }

            // Form submission feedback
            const form = document.querySelector('.register-form');
            const submitBtn = document.querySelector('.btn-register');
            
            if (form && submitBtn) {
                form.addEventListener('submit', function() {
                    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Creating Account...';
                    submitBtn.disabled = true;
                });
            }
        });
    </script>
}

@section Styles{
    <style>
        /* Override any conflicting Bootstrap styles */
        body {
            margin: 0;
            padding: 0;
        }
        
        .container, .container-fluid {
            padding: 0;
            margin: 0;
            max-width: none;
        }
    </style>
}